

function countNeighbors(location, board, neighbor) {
    var countNigs = 0
    for (var i = location.i - 1; i <= location.i + 1; i++) {
        if (i < 0 || i >= board.length) continue
        for (var j = location.j - 1; j <= location.j + 1; j++) {
            if (i === location.i && j === location.j) continue
            if (j < 0 || j >= board[0].length) continue
            // if (/*The Nig is being checked here*/) countNigs++
        }
    }
    return countNigs
}


//get a Random Color format #000000
function getRandomColor() {
    var letters = '0123456789ABCDEF'
    var color = '#'
    for (var i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)]
    }
    return color
}


//creates empty const matrix/Board with Row x Col Dimensions
function createEmptyBoard(ROWS, COLS) {
    const mat = []
    for (var i = 0; i < ROWS; i++) {
        const row = []
        for (var j = 0; j < COLS; j++) {
            row.push('')
        }
        mat.push(row)
    }
    return mat
}



//takes random number in array numbers, removes it from the array, returns the chosen num
function drawNum(nums) {
    var idx = gRandomIntInclusive(0, nums.length - 1)
    var num = nums[idx]
    nums.splice(idx, 1)
    return num
}



//shuffles int Num array
function gShuffleArr(numArray) {
    var numSortedArr = numArray.slice()
    var numShffledArr = []
    for (var i = 0, j = numArray.length; i < numArray.length; i++) {
        var currRandom = gRandomIntInclusive(0, --j)//15
        numShffledArr[i] = numSortedArr[currRandom]//numArray[15]=16
        numSortedArr.splice(currRandom, 1)
    }
    return numShffledArr
}




function getNextLocation(eventKeyboard) {
    // console.log(eventKeyboard)
    const nextLocation = {
        i: gPacman.location.i,
        j: gPacman.location.j
    }
    // DONE: figure out nextLocation
    switch (eventKeyboard) {
        case 'ArrowUp':
            nextLocation.i--
            break;
        case 'ArrowRight':
            nextLocation.j++
            break;
        case 'ArrowDown':
            nextLocation.i++
            break;
        case 'ArrowLeft':
            nextLocation.j--
            break;
    }
    return nextLocation
}




function timer() {
    var timer = document.querySelector('.timer span')
    var start = Date.now()
    gTimerInterval = setInterval(function () {
        var currTs = Date.now()
        var secs = parseInt((currTs - start) / 1000)
        var ms = (currTs - start) - secs * 1000
        ms = '000' + ms
        ms = ms.substring(ms.length - 2, ms.length)

        timer.innerText = `\n ${secs}:${ms}`
    }, 100)
}
